{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwinsam/Desktop/React/covid-tracker/src/Components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = () => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        sepatator: ',',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/edwinsam/Desktop/React/covid-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","data","confirmed","label","sepatator","borderColor","fill","deaths","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAkBC,QAAlB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAO,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACZC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEC,QAAAA;AAAF,OAAF,KAAeA,IAA7B,CADI;AAEZC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAET,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEI,UAAAA;AAAF,SAAF,KAAoBA,SAAlC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,SAAS,EAAE,GAHJ;AAIPC,QAAAA,WAAW,EAAE,SAJN;AAKPC,QAAAA,IAAI,EAAE;AALC,OAAD,EAMP;AACCL,QAAAA,IAAI,EAAET,SAAS,CAACM,GAAV,CAAc,CAAE;AAAES,UAAAA;AAAF,SAAF,KAAiBA,MAA/B,CADP;AAECJ,QAAAA,KAAK,EAAE,QAFR;AAGCE,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OANO;AAFE;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ,GAgBS,IAjBb;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,SAAvB;AAAA,cACKd;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CApCD;;GAAMJ,K;;KAAAA,K;AAsCN,eAAeA,KAAf","sourcesContent":["import React,   { useState, useEffect} from 'react'\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = () => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length \n        ? ( <Line data={{ \n            labels: dailyData.map(( { date }) => date), \n            datasets: [{\n                data: dailyData.map(( { confirmed }) => confirmed),\n                label: 'Infected',\n                sepatator: ',',\n                borderColor: '#3333ff',\n                fill: true\n            }, {\n                data: dailyData.map(( { deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }], \n        }} />) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}