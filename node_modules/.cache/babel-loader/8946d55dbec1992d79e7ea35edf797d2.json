{"ast":null,"code":"import _regeneratorRuntime from\"/Users/edwinsam/Desktop/React/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/edwinsam/Desktop/React/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/edwinsam/Desktop/React/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import styles from'./Chart.module.css';var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,deaths=_ref$data.deaths,recovered=_ref$data.recovered,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/_jsx(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#3333ff',fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255, 0, 0, 0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/_jsx(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:'People',backgroundColor:['rgba(0, 0, 255, 0.5)','rgba(123, 243, 129, 0.6)','rgba(255, 0, 0, 0.5)'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:country?barChart:lineChart});};export default Chart;","map":{"version":3,"sources":["/Users/edwinsam/Desktop/React/covid-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","value","legend","display","title","text","container"],"mappings":"8gBAAA,MAAOA,CAAAA,KAAP,EAAkBC,QAAlB,CAA4BC,SAA5B,KAA4C,OAA5C,CACA,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAuD,oBAArDC,IAAqD,CAA7CC,SAA6C,WAA7CA,SAA6C,CAAlCC,MAAkC,WAAlCA,MAAkC,CAA1BC,SAA0B,WAA1BA,SAA0B,CAAbC,OAAa,MAAbA,OAAa,eAC/BX,QAAQ,CAAC,EAAD,CADuB,wCAC1DY,SAD0D,eAC/CC,YAD+C,eAGjEZ,SAAS,CAAC,UAAM,CACZ,GAAMa,CAAAA,QAAQ,2FAAG,+IACbD,YADa,uBACMX,CAAAA,cAAc,EADpB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAIAA,QAAQ,GACX,CANQ,CAMN,EANM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cACI,KAAC,IAAD,EAAM,IAAI,CAAE,CACZC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAIC,CAAAA,IAAJ,OAAIA,IAAJ,OAAeA,CAAAA,IAAf,EAAd,CADI,CAEZC,QAAQ,CAAE,CAAC,CACPb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAIV,CAAAA,SAAJ,OAAIA,SAAJ,OAAoBA,CAAAA,SAApB,EAAd,CADC,CAEPa,KAAK,CAAE,UAFA,CAGPC,WAAW,CAAE,SAHN,CAIPC,IAAI,CAAE,IAJC,CAAD,CAKP,CACChB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAIT,CAAAA,MAAJ,OAAIA,MAAJ,OAAiBA,CAAAA,MAAjB,EAAd,CADP,CAECY,KAAK,CAAE,QAFR,CAGCC,WAAW,CAAE,KAHd,CAICE,eAAe,CAAE,sBAJlB,CAKCD,IAAI,CAAE,IALP,CALO,CAFE,CAAZ,EADJ,CAeS,IAhBb,CAmBA,GAAME,CAAAA,QAAQ,CACVjB,SAAS,cAEL,KAAC,GAAD,EACI,IAAI,CAAG,CACHS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CADL,CAEHG,QAAQ,CAAE,CAAC,CACPC,KAAK,CAAE,QADA,CAEPG,eAAe,CAAE,CACb,sBADa,CAEb,0BAFa,CAGb,sBAHa,CAFV,CAOPjB,IAAI,CAAE,CAACC,SAAS,CAACkB,KAAX,CAAkBhB,SAAS,CAACgB,KAA5B,CAAmCjB,MAAM,CAACiB,KAA1C,CAPC,CAAD,CAFP,CADX,CAaI,OAAO,CAAE,CACLC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADH,CAELC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBnB,OAAtB,CAArB,CAFF,CAbb,EAFK,CAoBL,IArBR,CAwBA,mBACI,YAAK,SAAS,CAAEN,MAAM,CAAC0B,SAAvB,UACKpB,OAAO,CAAGc,QAAH,CAAcV,SAD1B,EADJ,CAKH,CA3DD,CA8DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React,   { useState, useEffect} from 'react'\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data: { confirmed, deaths, recovered }, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    }, []);\n\n    const lineChart = (\n        dailyData.length \n        ? ( <Line data={{ \n            labels: dailyData.map(( { date }) => date), \n            datasets: [{\n                data: dailyData.map(( { confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true\n            }, {\n                data: dailyData.map(( { deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }], \n        }} />) : null\n    );\n\n    const barChart = (\n        confirmed \n        ? (\n            <Bar \n                data= {{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(123, 243, 129, 0.6)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}`}\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}