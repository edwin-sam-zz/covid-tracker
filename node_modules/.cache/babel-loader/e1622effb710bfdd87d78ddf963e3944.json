{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/edwinsam/Desktop/React/covid-tracker/src/Components/Chart/Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = (data, country) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  });\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nconst barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n  data: {\n    labels: ['Infected', 'Recovered', 'Deaths'],\n    datasets: [{\n      label: 'People',\n      backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0,5)'],\n      data: [confirmed, recovered, deaths]\n    }]\n  },\n  options: {\n    legend: {\n      display: false\n    },\n    title: {\n      display: true,\n      text: `Current state in ${country}`\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 9\n}, this) : null;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/edwinsam/Desktop/React/covid-tracker/src/Components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","confirmed","label","borderColor","fill","deaths","backgroundColor","container","barChart","recovered","legend","display","title","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAkBC,QAAlB,EAA4BC,SAA5B,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAAA;;AAC7B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMR,cAAc,EAArB,CAAZ;AACH,KAFD;;AAIAS,IAAAA,QAAQ;AACX,GANQ,CAAT;AAQA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACI,QAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AACZC,MAAAA,MAAM,EAAEL,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEC,QAAAA;AAAF,OAAF,KAAeA,IAA7B,CADI;AAEZC,MAAAA,QAAQ,EAAE,CAAC;AACPV,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEG,UAAAA;AAAF,SAAF,KAAoBA,SAAlC,CADC;AAEPC,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAKP;AACCd,QAAAA,IAAI,EAAEE,SAAS,CAACM,GAAV,CAAc,CAAE;AAAEO,UAAAA;AAAF,SAAF,KAAiBA,MAA/B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,KAHd;AAICG,QAAAA,eAAe,EAAE,sBAJlB;AAKCF,QAAAA,IAAI,EAAE;AALP,OALO;AAFE;AAAZ;AAAA;AAAA;AAAA;AAAA,UADJ,GAeS,IAhBb;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACmB,SAAvB;AAAA,cACKZ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAnCD;;GAAMN,K;;KAAAA,K;AAqCN,MAAMmB,QAAQ,GACVP,SAAS,gBAEL,QAAC,GAAD;AACI,EAAA,IAAI,EAAG;AACHJ,IAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADL;AAEHG,IAAAA,QAAQ,EAAE,CAAC;AACPE,MAAAA,KAAK,EAAE,QADA;AAEPI,MAAAA,eAAe,EAAE,CACb,sBADa,EAEb,sBAFa,EAGb,sBAHa,CAFV;AAOPhB,MAAAA,IAAI,EAAE,CAACW,SAAD,EAAYQ,SAAZ,EAAuBJ,MAAvB;AAPC,KAAD;AAFP,GADX;AAaI,EAAA,OAAO,EAAE;AACLK,IAAAA,MAAM,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KADH;AAELC,IAAAA,KAAK,EAAE;AAAED,MAAAA,OAAO,EAAE,IAAX;AAAiBE,MAAAA,IAAI,EAAG,oBAAmBtB,OAAQ;AAAnD;AAFF;AAbb;AAAA;AAAA;AAAA;AAAA,QAFK,GAoBL,IArBR;AAwBA,eAAeF,KAAf","sourcesContent":["import React,   { useState, useEffect} from 'react'\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css'\n\nconst Chart = (data, country) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length \n        ? ( <Line data={{ \n            labels: dailyData.map(( { date }) => date), \n            datasets: [{\n                data: dailyData.map(( { confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true\n            }, {\n                data: dailyData.map(( { deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                fill: true\n            }], \n        }} />) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {lineChart}\n        </div>\n    )\n}\n\nconst barChart = (\n    confirmed \n    ? (\n        <Bar \n            data= {{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [{\n                    label: 'People',\n                    backgroundColor: [\n                        'rgba(0, 0, 255, 0.5)',\n                        'rgba(0, 255, 0, 0.5)',\n                        'rgba(255, 0, 0, 0,5)'\n                    ],\n                    data: [confirmed, recovered, deaths]\n                }]\n            }}\n            options={{\n                legend: { display: false },\n                title: { display: true, text: `Current state in ${country}`}\n            }}\n        />\n    ) : null\n)\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}